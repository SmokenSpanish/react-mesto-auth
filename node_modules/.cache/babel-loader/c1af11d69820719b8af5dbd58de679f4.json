{"ast":null,"code":"var _jsxFileName = \"D:\\\\FRONTEND\\\\Mesto\\\\mesto-react\\\\src\\\\components\\\\EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup(props) {\n  _s();\n\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = React.useState();\n  const [description, setDescription] = React.useState();\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  const handleChangeName = evt => {\n    setName(evt.target.value);\n  };\n\n  const handleChangeDescription = evt => {\n    setDescription(evt.target.value);\n  };\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault(); // Передаём значения управляемых компонентов во внешний обработчик\n\n    props.onUpdateUser({\n      name,\n      about: description\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, { ...props,\n    type: 'profile',\n    title: 'Редактировать профиль',\n    buttonText: 'Сохранить',\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"popup__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name-card\",\n        className: \"popup__label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChangeName,\n          type: \"text\",\n          className: \"popup__input_type_name popup__input\",\n          defaultValue: name,\n          name: \"name\",\n          required: true,\n          minLength: \"2\",\n          maxLength: \"40\",\n          autoComplete: \"off\",\n          id: \"name-card\",\n          placeholder: \"\\u0418\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          id: \"name-card-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"job-card\",\n        className: \"popup__label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChangeDescription,\n          type: \"text\",\n          className: \"popup__input_type_description popup__input\",\n          defaultValue: description,\n          name: \"about\",\n          placeholder: \"\\u041E \\u0441\\u0435\\u0431\\u0435\",\n          autoComplete: \"off\",\n          id: \"job-card\",\n          required: true,\n          minLength: \"2\",\n          maxLength: \"200\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          id: \"job-card-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 11\n  }, this);\n}\n\n_s(EditProfilePopup, \"uz5dVtZDzSDBDJOPtxriNPvRtqY=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["D:/FRONTEND/Mesto/mesto-react/src/components/EditProfilePopup.js"],"names":["React","PopupWithForm","CurrentUserContext","EditProfilePopup","props","currentUser","useContext","name","setName","useState","description","setDescription","useEffect","about","handleChangeName","evt","target","value","handleChangeDescription","handleSubmit","e","preventDefault","onUpdateUser"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const [name, setName] = React.useState();\r\n    const [description, setDescription] = React.useState();\r\n\r\n    React.useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n      }, [currentUser]);\r\n    \r\n      const handleChangeName = (evt) => {\r\n        setName(evt.target.value);\r\n      };\r\n    \r\n      const handleChangeDescription = (evt) => {\r\n        setDescription(evt.target.value);\r\n      };\r\n    \r\n      function handleSubmit(e) {\r\n        // Запрещаем браузеру переходить по адресу формы\r\n        e.preventDefault();\r\n    \r\n        // Передаём значения управляемых компонентов во внешний обработчик\r\n        props.onUpdateUser({\r\n          name,\r\n          about: description,\r\n        });\r\n      }\r\n\r\n      return (\r\n          <PopupWithForm\r\n          {...props}\r\n          type={'profile'}\r\n          title={'Редактировать профиль'}\r\n          buttonText={'Сохранить'}\r\n        >\r\n          <fieldset className=\"popup__form\">\r\n            <label htmlFor=\"name-card\" className=\"popup__label\">\r\n              <input onChange={handleChangeName} type=\"text\" className=\"popup__input_type_name popup__input\" defaultValue={name} name=\"name\" required\r\n                minLength=\"2\" maxLength=\"40\" autoComplete=\"off\" id=\"name-card\" placeholder=\"Имя\" />\r\n              <span className=\"error\" id=\"name-card-error\"></span>\r\n            </label>\r\n            <label htmlFor=\"job-card\" className=\"popup__label\">\r\n              <input onChange={handleChangeDescription} type=\"text\" className=\"popup__input_type_description popup__input\" defaultValue={description} name=\"about\"\r\n                placeholder=\"О себе\" autoComplete=\"off\" id=\"job-card\" required minLength=\"2\"\r\n                maxLength=\"200\" />\r\n              <span className=\"error\" id=\"job-card-error\"></span>\r\n            </label>\r\n          </fieldset>\r\n        </PopupWithForm>\r\n      );\r\n}\r\n\r\nexport default EditProfilePopup;"]},"metadata":{},"sourceType":"module"}