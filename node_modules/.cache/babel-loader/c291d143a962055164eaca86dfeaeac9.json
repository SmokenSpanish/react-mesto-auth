{"ast":null,"code":"var _jsxFileName = \"D:\\\\FRONTEND\\\\Mesto\\\\mesto-react\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport api from './utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmPopup from './ConfirmPopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [idCardForDelete, setIdCardForDelete] = React.useState(null);\n  React.useEffect(() => {\n    api.getCards().then(cardsData => {\n      setCards(cardsData);\n    }).catch(err => {\n      console.log('getCards', err);\n    });\n  }, []);\n\n  function handleCardDeleteConfirm(card) {\n    setIsLoading(true);\n    api.deleteCard(idCardForDelete).then(() => {\n      setCards(state => state.filter(c => c._id !== idCardForDelete));\n      closeAllPopups();\n    });\n  }\n\n  function handleCardDelete(card) {\n    setIdCardForDelete(card._id);\n    setIsConfirmPopupOpen(true);\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  React.useEffect(() => {\n    api.getUserInfo().then(userData => {\n      setCurrentUser(userData);\n    }).catch(err => {\n      console.log('getUserInfo', err);\n    });\n  }, []);\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  const handleCardClick = card => {\n    setSelectedCard(card);\n  };\n\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsConfirmPopupOpen(false);\n    setSelectedCard(null);\n    setIsLoading(false);\n    setIdCardForDelete(null);\n  };\n\n  const handleUpdateUser = user => {\n    setIsLoading(true);\n    api.setUserInfo(user).then(newUser => {\n      setCurrentUser(newUser);\n      closeAllPopups();\n    }).catch(err => {\n      console.log('handleUpdateUser', err);\n    });\n  };\n\n  const handleUpdateAvatar = ({\n    avatar\n  }) => {\n    setIsLoading(true);\n    api.setUserAvatar(avatar).then(newUser => {\n      setCurrentUser(newUser);\n      closeAllPopups();\n    }).catch(err => {\n      console.log('handleUpdateAvatar', err);\n    });\n  };\n\n  const handleAddPlaceSubmit = place => {\n    setIsLoading(true);\n    api.createCard(place).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log('handleAddPlaceSubmit', err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onEditAvatar: handleEditAvatarClick,\n        onCardClick: handleCardClick,\n        cards: cards,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlaceSubmit: handleAddPlaceSubmit,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmPopup, {\n        isOpen: isConfirmPopupOpen,\n        onClose: closeAllPopups,\n        type: 'confirm',\n        title: 'Вы уверены?',\n        buttonText: 'Да'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gFDWl5tKsw5h2n0OlbKf0ZgEKFQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/FRONTEND/Mesto/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","PopupWithForm","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ConfirmPopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","isLoading","setIsLoading","idCardForDelete","setIdCardForDelete","useEffect","getCards","then","cardsData","catch","err","console","log","handleCardDeleteConfirm","card","deleteCard","state","filter","c","_id","closeAllPopups","handleCardDelete","handleCardLike","isLiked","likes","some","i","changeLikeCardStatus","newCard","map","getUserInfo","userData","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","handleUpdateUser","user","setUserInfo","newUser","handleUpdateAvatar","avatar","setUserAvatar","handleAddPlaceSubmit","place","createCard"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,sBAAD,EAAyBC,yBAAzB,IAAsDd,KAAK,CAACe,QAAN,CAAe,KAAf,CAA5D;AAEA,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDjB,KAAK,CAACe,QAAN,CAAe,KAAf,CAAtD;AAEA,QAAM,CAACG,qBAAD,EAAwBC,wBAAxB,IAAoDnB,KAAK,CAACe,QAAN,CAAe,KAAf,CAA1D;AAEA,QAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CrB,KAAK,CAACe,QAAN,CAAe,KAAf,CAApD;AAEA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCvB,KAAK,CAACe,QAAN,CAAe,IAAf,CAAxC;AAEA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCzB,KAAK,CAACe,QAAN,CAAe,EAAf,CAAtC;AAEA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoB3B,KAAK,CAACe,QAAN,CAAe,EAAf,CAA1B;AAEA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4B7B,KAAK,CAACe,QAAN,CAAe,KAAf,CAAlC;AAEA,QAAM,CAACe,eAAD,EAAkBC,kBAAlB,IAAwC/B,KAAK,CAACe,QAAN,CAAe,IAAf,CAA9C;AAEAf,EAAAA,KAAK,CAACgC,SAAN,CAAgB,MAAM;AACpB1B,IAAAA,GAAG,CACA2B,QADH,GAEGC,IAFH,CAESC,SAAD,IAAe;AACnBR,MAAAA,QAAQ,CAACQ,SAAD,CAAR;AACD,KAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,GAAxB;AACD,KAPH;AAQD,GATD,EASG,EATH;;AAWA,WAASG,uBAAT,CAAiCC,IAAjC,EAAuC;AACrCZ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAvB,IAAAA,GAAG,CAACoC,UAAJ,CAAeZ,eAAf,EAAgCI,IAAhC,CAAqC,MAAM;AACzCP,MAAAA,QAAQ,CAAEgB,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUhB,eAA9B,CAAZ,CAAR;AACAiB,MAAAA,cAAc;AACf,KAHD;AAID;;AAED,WAASC,gBAAT,CAA0BP,IAA1B,EAAgC;AAC9BV,IAAAA,kBAAkB,CAACU,IAAI,CAACK,GAAN,CAAlB;AACAzB,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD;;AAED,WAAS4B,cAAT,CAAwBR,IAAxB,EAA8B;AAC5B;AACA,UAAMS,OAAO,GAAGT,IAAI,CAACU,KAAL,CAAWC,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACP,GAAF,KAAUtB,WAAW,CAACsB,GAA7C,CAAhB,CAF4B,CAI5B;;AACAxC,IAAAA,GAAG,CAACgD,oBAAJ,CAAyBb,IAAI,CAACK,GAA9B,EAAmC,CAACI,OAApC,EAA6ChB,IAA7C,CAAmDqB,OAAD,IAAa;AAC7D5B,MAAAA,QAAQ,CAAEgB,KAAD,IAAWA,KAAK,CAACa,GAAN,CAAWX,CAAD,IAAQA,CAAC,CAACC,GAAF,KAAUL,IAAI,CAACK,GAAf,GAAqBS,OAArB,GAA+BV,CAAjD,CAAZ,CAAR;AACD,KAFD;AAGD;;AAED7C,EAAAA,KAAK,CAACgC,SAAN,CAAgB,MAAM;AACpB1B,IAAAA,GAAG,CACAmD,WADH,GAEGvB,IAFH,CAESwB,QAAD,IAAc;AAClBjC,MAAAA,cAAc,CAACiC,QAAD,CAAd;AACD,KAJH,EAKGtB,KALH,CAKUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,GAA3B;AACD,KAPH;AAQD,GATD,EASG,EATH;;AAWA,QAAMsB,qBAAqB,GAAG,MAAM;AAClCxC,IAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACD,GAFD;;AAGA,QAAMyC,sBAAsB,GAAG,MAAM;AACnC9C,IAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACD,GAFD;;AAIA,QAAM+C,mBAAmB,GAAG,MAAM;AAChC5C,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD,GAFD;;AAIA,QAAM6C,eAAe,GAAIrB,IAAD,IAAU;AAChClB,IAAAA,eAAe,CAACkB,IAAD,CAAf;AACD,GAFD;;AAIA,QAAMM,cAAc,GAAG,MAAM;AAC3B5B,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACAL,IAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACAG,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACAI,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAE,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAM,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GARD;;AAUA,QAAMgC,gBAAgB,GAAIC,IAAD,IAAU;AACjCnC,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAvB,IAAAA,GAAG,CACA2D,WADH,CACeD,IADf,EAEG9B,IAFH,CAESgC,OAAD,IAAa;AACjBzC,MAAAA,cAAc,CAACyC,OAAD,CAAd;AACAnB,MAAAA,cAAc;AACf,KALH,EAMGX,KANH,CAMUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,GAAhC;AACD,KARH;AASD,GAXD;;AAaA,QAAM8B,kBAAkB,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AACzCvC,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAvB,IAAAA,GAAG,CACA+D,aADH,CACiBD,MADjB,EAEGlC,IAFH,CAESgC,OAAD,IAAa;AACjBzC,MAAAA,cAAc,CAACyC,OAAD,CAAd;AACAnB,MAAAA,cAAc;AACf,KALH,EAMGX,KANH,CAMUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,GAAlC;AACD,KARH;AASD,GAXD;;AAaA,QAAMiC,oBAAoB,GAAIC,KAAD,IAAW;AACtC1C,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAvB,IAAAA,GAAG,CACAkE,UADH,CACcD,KADd,EAEGrC,IAFH,CAESqB,OAAD,IAAa;AACjB5B,MAAAA,QAAQ,CAAC,CAAC4B,OAAD,EAAU,GAAG7B,KAAb,CAAD,CAAR;AACAqB,MAAAA,cAAc;AACf,KALH,EAMGX,KANH,CAMUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,GAApC;AACD,KARH;AASD,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE,QAAC,kBAAD,CAAoB,QAApB;AAA6B,MAAA,KAAK,EAAEb,WAApC;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AACE,QAAA,aAAa,EAAEoC,sBADjB;AAEE,QAAA,UAAU,EAAEC,mBAFd;AAGE,QAAA,YAAY,EAAEF,qBAHhB;AAIE,QAAA,WAAW,EAAEG,eAJf;AAKE,QAAA,KAAK,EAAEpC,KALT;AAME,QAAA,UAAU,EAAEuB,cANd;AAOE,QAAA,YAAY,EAAED;AAPhB;AAAA;AAAA;AAAA;AAAA,cAFF,eAYE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAE1B,YAAlB;AAAgC,QAAA,OAAO,EAAEyB;AAAzC;AAAA;AAAA;AAAA;AAAA,cAbF,eAcE,QAAC,gBAAD;AACE,QAAA,MAAM,EAAElC,sBADV;AAEE,QAAA,OAAO,EAAEkC,cAFX;AAGE,QAAA,YAAY,EAAEgB,gBAHhB;AAIE,QAAA,SAAS,EAAEnC;AAJb;AAAA;AAAA;AAAA;AAAA,cAdF,eAqBE,QAAC,eAAD;AACE,QAAA,MAAM,EAAEV,qBADV;AAEE,QAAA,OAAO,EAAE6B,cAFX;AAGE,QAAA,cAAc,EAAEoB,kBAHlB;AAIE,QAAA,SAAS,EAAEvC;AAJb;AAAA;AAAA;AAAA;AAAA,cArBF,eA4BE,QAAC,aAAD;AACE,QAAA,MAAM,EAAEZ,mBADV;AAEE,QAAA,OAAO,EAAE+B,cAFX;AAGE,QAAA,gBAAgB,EAAEuB,oBAHpB;AAIE,QAAA,SAAS,EAAE1C;AAJb;AAAA;AAAA;AAAA;AAAA,cA5BF,eAmCE,QAAC,YAAD;AACE,QAAA,MAAM,EAAER,kBADV;AAEE,QAAA,OAAO,EAAE2B,cAFX;AAGE,QAAA,IAAI,EAAE,SAHR;AAIE,QAAA,KAAK,EAAE,aAJT;AAKE,QAAA,UAAU,EAAE;AALd;AAAA;AAAA;AAAA;AAAA,cAnCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+CD;;GAhLQnC,G;;KAAAA,G;AAkLT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport api from './utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmPopup from './ConfirmPopup';\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = React.useState(false);\n\n  const [selectedCard, setSelectedCard] = React.useState(null);\n\n  const [currentUser, setCurrentUser] = React.useState({});\n\n  const [cards, setCards] = React.useState([]);\n\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const [idCardForDelete, setIdCardForDelete] = React.useState(null);\n\n  React.useEffect(() => {\n    api\n      .getCards()\n      .then((cardsData) => {\n        setCards(cardsData);\n      })\n      .catch((err) => {\n        console.log('getCards', err);\n      });\n  }, []);\n\n  function handleCardDeleteConfirm(card) {\n    setIsLoading(true);\n    api.deleteCard(idCardForDelete).then(() => {\n      setCards((state) => state.filter((c) => c._id !== idCardForDelete));\n      closeAllPopups();\n    });\n  }\n\n  function handleCardDelete(card) {\n    setIdCardForDelete(card._id);\n    setIsConfirmPopupOpen(true);\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n      setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\n    });\n  }\n\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then((userData) => {\n        setCurrentUser(userData);\n      })\n      .catch((err) => {\n        console.log('getUserInfo', err);\n      });\n  }, []);\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  }\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n  };\n\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsConfirmPopupOpen(false);\n    setSelectedCard(null);\n    setIsLoading(false);\n    setIdCardForDelete(null);\n  }\n\n  const handleUpdateUser = (user) => {\n    setIsLoading(true);\n    api\n      .setUserInfo(user)\n      .then((newUser) => {\n        setCurrentUser(newUser);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log('handleUpdateUser', err);\n      });\n  };\n\n  const handleUpdateAvatar = ({ avatar }) => {\n    setIsLoading(true);\n    api\n      .setUserAvatar(avatar)\n      .then((newUser) => {\n        setCurrentUser(newUser);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log('handleUpdateAvatar', err);\n      });\n  };\n\n  const handleAddPlaceSubmit = (place) => {\n    setIsLoading(true);\n    api\n      .createCard(place)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log('handleAddPlaceSubmit', err);\n      });\n  };\n\n  return (\n    <div className=\"page\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header />\n        <Main\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          onCardClick={handleCardClick} \n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n          />\n          \n        <Footer />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n          isLoading={isLoading}\n        />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          isLoading={isLoading}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlaceSubmit={handleAddPlaceSubmit}\n          isLoading={isLoading}\n        />\n\n        <ConfirmPopup\n          isOpen={isConfirmPopupOpen}\n          onClose={closeAllPopups}\n          type={'confirm'}\n          title={'Вы уверены?'}\n          buttonText={'Да'}\n        />\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}