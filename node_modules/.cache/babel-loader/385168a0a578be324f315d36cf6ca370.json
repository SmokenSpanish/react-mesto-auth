{"ast":null,"code":"const configAPI = {\n  myUrl: \"https://mesto.nomoreparties.co/v1/cohort-23\",\n  headers: {\n    authorization: \"82812fb7-c1cd-4b78-9cdb-8e7701744213\",\n    \"Content-Type\": \"application/json\"\n  }\n};\n\nclass Api {\n  constructor({\n    myUrl,\n    headers\n  }) {\n    this._myUrl = myUrl;\n    this._headers = headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  getCards() {\n    return fetch(`${this._myUrl}/cards`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._myUrl}/users/me`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  setUserInfo(user) {\n    return fetch(`${this._myUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: user.name,\n        about: user.about\n      })\n    }).then(this._checkResponse);\n  }\n\n  createCard(card) {\n    return fetch(`${this._myUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: card.name,\n        link: card.link\n      })\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._myUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    const method = isLiked ? 'PUT' : 'DELETE';\n    return fetch(`${this._myUrl}/cards/likes/${cardId}`, {\n      method,\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  setUserAvatar(avatar) {\n    return fetch(`${this._myUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._checkResponse);\n  }\n\n}\n\nconst api = new Api(configAPI);\nexport default api;","map":{"version":3,"sources":["D:/FRONTEND/Mesto/react-mesto-auth/src/utils/api.js"],"names":["configAPI","myUrl","headers","authorization","Api","constructor","_myUrl","_headers","_checkResponse","res","ok","json","Promise","reject","status","getCards","fetch","then","getUserInfo","setUserInfo","user","method","body","JSON","stringify","name","about","createCard","card","link","deleteCard","cardId","changeLikeCardStatus","isLiked","setUserAvatar","avatar","api"],"mappings":"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","sourcesContent":["const configAPI = {\r\n  myUrl: \"https://mesto.nomoreparties.co/v1/cohort-23\",\r\n  headers: {\r\n      authorization: \"82812fb7-c1cd-4b78-9cdb-8e7701744213\",\r\n      \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nclass Api {\r\n    constructor({myUrl, headers}) {\r\n        this._myUrl = myUrl;\r\n        this._headers = headers;\r\n    }\r\n\r\n    _checkResponse(res) {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка ${res.status}`);\r\n      }\r\n    \r\n      getCards() {\r\n        return fetch(`${this._myUrl}/cards`, {\r\n          headers: this._headers,\r\n        }).then(this._checkResponse);\r\n      }\r\n    \r\n      getUserInfo() {\r\n        return fetch(`${this._myUrl}/users/me`, {\r\n          headers: this._headers,\r\n        }).then(this._checkResponse);\r\n      }\r\n    \r\n      setUserInfo(user) {\r\n        return fetch(`${this._myUrl}/users/me`, {\r\n          method: \"PATCH\",\r\n          headers: this._headers,\r\n          body: JSON.stringify({\r\n            name: user.name,\r\n            about: user.about,\r\n          }),\r\n        }).then(this._checkResponse);\r\n      }\r\n    \r\n      createCard(card) {\r\n        return fetch(`${this._myUrl}/cards`, {\r\n          method: \"POST\",\r\n          headers: this._headers,\r\n          body: JSON.stringify({\r\n            name: card.name,\r\n            link: card.link,\r\n          }),\r\n        }).then(this._checkResponse);\r\n      }\r\n    \r\n      deleteCard(cardId) {\r\n        return fetch(`${this._myUrl}/cards/${cardId}`, {\r\n          method: \"DELETE\",\r\n          headers: this._headers,\r\n        }).then(this._checkResponse);\r\n      }\r\n    \r\n      changeLikeCardStatus(cardId, isLiked) {\r\n        const method = isLiked ? 'PUT' : 'DELETE';\r\n        return fetch(`${this._myUrl}/cards/likes/${cardId}`, {\r\n          method,\r\n          headers: this._headers,\r\n        }).then(this._checkResponse);\r\n      }\r\n    \r\n      setUserAvatar(avatar) {\r\n        return fetch(`${this._myUrl}/users/me/avatar`, {\r\n          method: \"PATCH\",\r\n          headers: this._headers,\r\n          body: JSON.stringify({\r\n            avatar,\r\n          }),\r\n        }).then(this._checkResponse);\r\n      }\r\n\r\n}\r\n\r\nconst api = new Api(configAPI);\r\n\r\nexport default api;"]},"metadata":{},"sourceType":"module"}